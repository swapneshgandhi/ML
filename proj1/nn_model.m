% Submitted by Swapnesh Gandhi Person #50096836

% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by NFTOOL
% Created Sun Oct 13 20:40:57 EDT 2013
%
% This script assumes these variables are defined:
%
%   final - input data.
%   target - target data.
load('project1_data.mat');
inputs = final';
targets = target';
    
% Create a Fitting Network
hiddenLayerSize = 8;
net = fitnet(hiddenLayerSize);


% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 40/100;
net.divideParam.valRatio = 10/100;
net.divideParam.testRatio = 50/100;


% Train the Network
[net,tr] = train(net,inputs,targets);

% Test the Network
outputs = net(inputs);
errors = (gsubtract(targets,outputs))*(gsubtract(targets,outputs))';
rms_nn=sqrt(errors/length(outputs));

sprintf('the root mean square error for the neural network model is %f', rms_nn)
% View the Network
view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, plotfit(net,inputs,targets)
%figure, plotregression(targets,outputs)
%figure, ploterrhist(errors)
